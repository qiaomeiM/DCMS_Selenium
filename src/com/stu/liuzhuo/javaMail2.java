package com.stu.liuzhuo;
/**
 * 
 * @author LiuZhuo
 * 
 * */
import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.FileDataSource;
import javax.mail.Message.RecipientType;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.mail.internet.MimeUtility;

public class javaMail2 {
/**
 * 创建并发送一封包含文本、图片、附件的复杂邮件
 * @author LiuZhuo
 **/
	//发件人的邮箱和密码（替换为自己的邮箱和密码）
	public static String myEmailAccount = "15232179903@163.com";
	public static String myEmailPassword = "lzjm123";
	
	//发件人的SMTP服务器地址，必须准确，不同邮件服务器地址不同，一般格式为：smtp.xxx.com
	//网易163邮箱的SMTP服务器地址为：smtp.163.com
	public static String myEmailSMTPHost = "smtp.163.com";
	
	//收件人邮箱（替换为自己知道的有效邮箱）
	public static String receiveMailAccount = "15232179903@163.com";
	
	
	public static void main(String[] args) throws Exception{
		//1.创建参数配置，用于连接邮件服务器的参数配置
		Properties props = new Properties();						//参数配置
		props.setProperty("mail.transport.protocol", "smtp");		//使用的协议（JavaMail规范要求）
		props.setProperty("mail.host", myEmailSMTPHost);			//发件人的邮箱的SMTP服务器地址
		props.setProperty("mail.smtp.auth", "true");				//请求认证，参数名称与具体实现有关
		
		//2.根据配置创建回话对象，用于和邮件服务器交互
		Session session = Session.getDefaultInstance(props);
		session.setDebug(true); 									//设置位debug模式，可以查看详细的发送log
		
		//3.创建一封邮件
		MimeMessage message = createMimeMessage(session,myEmailAccount,receiveMailAccount);
		//也可以保存到本地查看
		//message.writeTo(file_out_put_stream);
		
		//4.根据Session 获取邮件传输对象
		Transport transport = session.getTransport();
		
		//5.使用邮箱账号和密码链接邮件服务器
		//	这里认证的邮箱必须与message中的发件人邮箱一直，否则报错
		transport.connect(myEmailAccount,myEmailPassword);
		
		//6.发送邮件，发到所有的收件地址，message.getAllRecipients() 获取到的是在创建邮件对象时添加的所有收件人，抄送人，密送人
		transport.sendMessage(message,message.getAllRecipients());
		
		//7.关闭链接
		transport.close();	
	}
/**
 * 创建一封复杂邮件（文本+图片+附件）
 * @throws MessagingException 
 * @throws UnsupportedEncodingException 
 * */
	private static MimeMessage createMimeMessage(Session session, String sendMail, String receiveMail) throws UnsupportedEncodingException, MessagingException {
		// TODO Auto-generated method stub
		//1.创建邮件对象
		MimeMessage message = new MimeMessage(session);
		
		//2.From:发件人
		message.setFrom(new InternetAddress(sendMail,"我的测试邮件―太公钓鱼","UTF-8"));
		
		//3.To:收件人
		message.addRecipient(RecipientType.TO,new InternetAddress(receiveMail,"我的测试邮件―太公钓鱼 ","UTF-8"));
		
		//4.Subject:邮件主题
		message.setSubject("TEST邮件主题（文本+图片+附件）","UTF-8");
		
		/**
		 * 下面是邮件内容的创建：
		 * */
		//5.创建图片“节点”
		MimeBodyPart image = new MimeBodyPart();
		DataHandler dh = new DataHandler(new FileDataSource("D:\\1myschool\\1.jpg"));	//读取本地文件
		image.setDataHandler(dh); 					//将图片数据添加到“节点”
		image.setContentID("image_fairy_tail");		//为“节点”设置一个唯一的编号（在文本“节点”将引用该ID）
		
		//6.创建文本“节点”
		MimeBodyPart text = new MimeBodyPart();
		//这里添加图片的方式是将整个图片包含到邮件内容中，实际上也可以以http链接的形式添加网络图片
		text.setContent("这是一张图片<br/><img src='cid:image_fairy_tail'/>","text/html;charset=UTF-8");
		
		//7.（文本+图片）设置文本和图片“节点”的关系（将文本和图片“节点”合成一个混合“节点”）
		MimeMultipart mm_text_image = new MimeMultipart ();
		mm_text_image.addBodyPart(text);
		mm_text_image.addBodyPart(image);
		mm_text_image.setSubType("related"); 	//关联关系
		
		//8.将文本+图片 的混合节点，封装成一个普通节点
		//	最终添加到邮件的Content是由多个BodyPart组成的Multipart，所以我们需要的是BodyPart
		//	 上面的 mm_text_image 并非 BodyPart, 所有要把 mm_text_image 封装成一个 BodyPart
		MimeBodyPart text_image = new MimeBodyPart();
		text_image.setContent(mm_text_image);
		
		//9.创建附件节点
		MimeBodyPart attachment = new MimeBodyPart();
		DataHandler dh2 = new DataHandler(new FileDataSource("D:\\1myschool\\哆啦A梦.docx"));//读取本地文件
		attachment.setDataHandler(dh2);														//将附件数据添加到节点
		attachment.setFileName(MimeUtility.decodeText(dh2.getName()));						//设置附件的文件名（需要编码）
		
		//10.设置（文本+图片）和附件的关系（合成一个大的混合节点，/Multipart）
		MimeMultipart mm = new MimeMultipart();
		mm.addBodyPart(text_image);
		mm.addBodyPart(attachment);			//如果有多个附件，可以创建多个多次添加
		mm.setSubType("mixed");				//混合关系
		
		//11.设置整个邮件的关系（将最红的混合节点作为邮件的内容添加到邮件对象）
		message.setContent(mm);
		
		//12.设置发件时间
		message.setSentDate(new Date());
		
		//13.保存上面的所有设置
		message.saveChanges();	
		return message;
	}
}
